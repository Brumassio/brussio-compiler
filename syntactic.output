Nonterminals useless in grammar

    declarations
    declaration


Terminals unused in grammar

    TOKEN_INT
    TOKEN_IDOUBLE
    TOKEN_MASTER
    TOKEN_INCLUDE
    TOKEN_PRINT
    TOKEN_XOR
    TOKEN_DOT
    UMINUS


Rules useless in grammar

   63 declarations: declarations declaration
   64             | declaration

   65 declaration: type TOKEN_IDENTIFICADOR TOKEN_PONTOEVIRGULA


Rules useless in parser due to conflicts

   13 unary_operator: TOKEN_INCREMENT
   14               | TOKEN_DECREMENT


State 52 conflicts: 5 shift/reduce
State 53 conflicts: 5 shift/reduce
State 65 conflicts: 12 shift/reduce
State 66 conflicts: 12 shift/reduce
State 82 conflicts: 12 shift/reduce
State 88 conflicts: 2 shift/reduce
State 90 conflicts: 12 shift/reduce
State 96 conflicts: 1 shift/reduce
State 113 conflicts: 2 shift/reduce, 9 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: class_declaration

    2 type: TOKEN_INTEGER
    3     | TOKEN_CHAR
    4     | TOKEN_DOUBLE
    5     | TOKEN_VOID

    6 exp: term
    7    | unary_operator exp
    8    | exp binary_operator exp
    9    | '(' exp ')'
   10    | variable

   11 term: expression_increment
   12     | expression_decrement

   13 unary_operator: TOKEN_INCREMENT
   14               | TOKEN_DECREMENT
   15               | '!'

   16 expression_increment: TOKEN_INCREMENT exp

   17 expression_decrement: TOKEN_DECREMENT exp

   18 binary_operator: TOKEN_SUM
   19                | TOKEN_SUB
   20                | TOKEN_MULT
   21                | TOKEN_DIV
   22                | TOKEN_OR
   23                | TOKEN_AND
   24                | TOKEN_EQUAL
   25                | TOKEN_NE
   26                | TOKEN_GT
   27                | TOKEN_LT
   28                | TOKEN_GE
   29                | TOKEN_LE

   30 variable: TOKEN_IDENTIFICADOR

   31 assignment: variable TOKEN_ASSIGN exp TOKEN_PONTOEVIRGULA

   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' tail

   33 while_stat: TOKEN_WHILE '(' exp ')' tail

   34 if_stat: TOKEN_IF '(' exp ')' tail else_if_part else_part

   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF '(' exp ')' tail
   36             | TOKEN_ELSE
   37             | TOKEN_IF '(' exp ')' tail
   38             | ε

   39 else_part: TOKEN_ELSE tail
   40          | ε

   41 tail: statement
   42     | '{' statements '}'

   43 statements: statements statement
   44           | statement

   45 statement: if_stat
   46          | for_stat
   47          | while_stat
   48          | assignment
   49          | TOKEN_CONTINUE TOKEN_PONTOEVIRGULA
   50          | TOKEN_BREAK TOKEN_PONTOEVIRGULA
   51          | TOKEN_RETURN TOKEN_PONTOEVIRGULA

   52 class_declaration: TOKEN_CLASS TOKEN_IDENTIFICADOR TOKEN_LBRACE class_body TOKEN_RBRACE

   53 class_body: class_members

   54 class_members: class_members class_member
   55              | ε

   56 class_member: attribute_declaration
   57             | method_declaration

   58 attribute_declaration: type TOKEN_IDENTIFICADOR TOKEN_PONTOEVIRGULA

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' statements '}'

   60 parameters_list: parameter_declaration
   61                | parameters_list TOKEN_VIRGULA parameter_declaration

   62 parameter_declaration: type TOKEN_IDENTIFICADOR


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 15
    '(' (40) 9 32 33 34 35 37
    ')' (41) 9 32 33 34 35 37
    '{' (123) 42 59
    '}' (125) 42 59
    error (256)
    TOKEN_IF <obj> (258) 34 35 37
    TOKEN_ELSE <obj> (259) 35 36 39
    TOKEN_FOR <obj> (260) 32
    TOKEN_WHILE <obj> (261) 33
    TOKEN_INT <obj> (262)
    TOKEN_VOID <obj> (263) 5
    TOKEN_IDOUBLE <obj> (264)
    TOKEN_MASTER <obj> (265)
    TOKEN_INCLUDE <obj> (266)
    TOKEN_PRINT <obj> (267)
    TOKEN_RETURN <obj> (268) 51
    TOKEN_BREAK <obj> (269) 50
    TOKEN_CONTINUE <obj> (270) 49
    TOKEN_CLASS <obj> (271) 52
    TOKEN_INTEGER <obj> (272) 2
    TOKEN_CHAR <obj> (273) 3
    TOKEN_IDENTIFICADOR <obj> (274) 30 52 58 59 62
    TOKEN_DOUBLE <obj> (275) 4
    TOKEN_SUM <obj> (276) 18
    TOKEN_SUB <obj> (277) 19
    TOKEN_MULT <obj> (278) 20
    TOKEN_DIV <obj> (279) 21
    TOKEN_EQUAL <obj> (280) 24
    TOKEN_INCREMENT <obj> (281) 13 16
    TOKEN_DECREMENT <obj> (282) 14 17
    TOKEN_GT <obj> (283) 26
    TOKEN_LT <obj> (284) 27
    TOKEN_GE <obj> (285) 28
    TOKEN_LE <obj> (286) 29
    TOKEN_NE <obj> (287) 25
    TOKEN_XOR <obj> (288)
    TOKEN_OR <obj> (289) 22
    TOKEN_AND <obj> (290) 23
    TOKEN_ASSIGN <obj> (291) 31
    TOKEN_LBRACE <obj> (292) 52
    TOKEN_RBRACE <obj> (293) 52
    TOKEN_DOT <obj> (294)
    TOKEN_PONTOEVIRGULA <obj> (295) 31 32 49 50 51 58
    TOKEN_VIRGULA <obj> (296) 61
    TOKEN_LPAREN <obj> (297) 59
    TOKEN_RPAREN <obj> (298) 59
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    type <obj> (52)
        on left: 2 3 4 5
        on right: 58 59 62
    exp (53)
        on left: 6 7 8 9 10
        on right: 7 8 9 16 17 31 32 33 34 35 37
    term (54)
        on left: 11 12
        on right: 6
    unary_operator (55)
        on left: 13 14 15
        on right: 7
    expression_increment (56)
        on left: 16
        on right: 11
    expression_decrement (57)
        on left: 17
        on right: 12
    binary_operator (58)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 8
    variable <doubleValue> (59)
        on left: 30
        on right: 10 31
    assignment (60)
        on left: 31
        on right: 48
    for_stat (61)
        on left: 32
        on right: 46
    while_stat (62)
        on left: 33
        on right: 47
    if_stat (63)
        on left: 34
        on right: 45
    else_if_part (64)
        on left: 35 36 37 38
        on right: 34 35
    else_part (65)
        on left: 39 40
        on right: 34
    tail (66)
        on left: 41 42
        on right: 32 33 34 35 37 39
    statements (67)
        on left: 43 44
        on right: 42 43 59
    statement (68)
        on left: 45 46 47 48 49 50 51
        on right: 41 43 44
    class_declaration <obj> (69)
        on left: 52
        on right: 1
    class_body (70)
        on left: 53
        on right: 52
    class_members (71)
        on left: 54 55
        on right: 53 54
    class_member (72)
        on left: 56 57
        on right: 54
    attribute_declaration <obj> (73)
        on left: 58
        on right: 56
    method_declaration (74)
        on left: 59
        on right: 57
    parameters_list (75)
        on left: 60 61
        on right: 59 61
    parameter_declaration (76)
        on left: 62
        on right: 60 61


State 0

    0 $accept: • program $end

    TOKEN_CLASS  shift, and go to state 1

    program            go to state 2
    class_declaration  go to state 3


State 1

   52 class_declaration: TOKEN_CLASS • TOKEN_IDENTIFICADOR TOKEN_LBRACE class_body TOKEN_RBRACE

    TOKEN_IDENTIFICADOR  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: class_declaration •

    $default  reduce using rule 1 (program)


State 4

   52 class_declaration: TOKEN_CLASS TOKEN_IDENTIFICADOR • TOKEN_LBRACE class_body TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

   52 class_declaration: TOKEN_CLASS TOKEN_IDENTIFICADOR TOKEN_LBRACE • class_body TOKEN_RBRACE

    $default  reduce using rule 55 (class_members)

    class_body     go to state 7
    class_members  go to state 8


State 7

   52 class_declaration: TOKEN_CLASS TOKEN_IDENTIFICADOR TOKEN_LBRACE class_body • TOKEN_RBRACE

    TOKEN_RBRACE  shift, and go to state 9


State 8

   53 class_body: class_members •
   54 class_members: class_members • class_member

    TOKEN_VOID     shift, and go to state 10
    TOKEN_INTEGER  shift, and go to state 11
    TOKEN_CHAR     shift, and go to state 12
    TOKEN_DOUBLE   shift, and go to state 13

    $default  reduce using rule 53 (class_body)

    type                   go to state 14
    class_member           go to state 15
    attribute_declaration  go to state 16
    method_declaration     go to state 17


State 9

   52 class_declaration: TOKEN_CLASS TOKEN_IDENTIFICADOR TOKEN_LBRACE class_body TOKEN_RBRACE •

    $default  reduce using rule 52 (class_declaration)


State 10

    5 type: TOKEN_VOID •

    $default  reduce using rule 5 (type)


State 11

    2 type: TOKEN_INTEGER •

    $default  reduce using rule 2 (type)


State 12

    3 type: TOKEN_CHAR •

    $default  reduce using rule 3 (type)


State 13

    4 type: TOKEN_DOUBLE •

    $default  reduce using rule 4 (type)


State 14

   58 attribute_declaration: type • TOKEN_IDENTIFICADOR TOKEN_PONTOEVIRGULA
   59 method_declaration: type • TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' statements '}'

    TOKEN_IDENTIFICADOR  shift, and go to state 18


State 15

   54 class_members: class_members class_member •

    $default  reduce using rule 54 (class_members)


State 16

   56 class_member: attribute_declaration •

    $default  reduce using rule 56 (class_member)


State 17

   57 class_member: method_declaration •

    $default  reduce using rule 57 (class_member)


State 18

   58 attribute_declaration: type TOKEN_IDENTIFICADOR • TOKEN_PONTOEVIRGULA
   59 method_declaration: type TOKEN_IDENTIFICADOR • TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' statements '}'

    TOKEN_PONTOEVIRGULA  shift, and go to state 19
    TOKEN_LPAREN         shift, and go to state 20


State 19

   58 attribute_declaration: type TOKEN_IDENTIFICADOR TOKEN_PONTOEVIRGULA •

    $default  reduce using rule 58 (attribute_declaration)


State 20

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN • parameters_list TOKEN_RPAREN '{' statements '}'

    TOKEN_VOID     shift, and go to state 10
    TOKEN_INTEGER  shift, and go to state 11
    TOKEN_CHAR     shift, and go to state 12
    TOKEN_DOUBLE   shift, and go to state 13

    type                   go to state 21
    parameters_list        go to state 22
    parameter_declaration  go to state 23


State 21

   62 parameter_declaration: type • TOKEN_IDENTIFICADOR

    TOKEN_IDENTIFICADOR  shift, and go to state 24


State 22

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list • TOKEN_RPAREN '{' statements '}'
   61 parameters_list: parameters_list • TOKEN_VIRGULA parameter_declaration

    TOKEN_VIRGULA  shift, and go to state 25
    TOKEN_RPAREN   shift, and go to state 26


State 23

   60 parameters_list: parameter_declaration •

    $default  reduce using rule 60 (parameters_list)


State 24

   62 parameter_declaration: type TOKEN_IDENTIFICADOR •

    $default  reduce using rule 62 (parameter_declaration)


State 25

   61 parameters_list: parameters_list TOKEN_VIRGULA • parameter_declaration

    TOKEN_VOID     shift, and go to state 10
    TOKEN_INTEGER  shift, and go to state 11
    TOKEN_CHAR     shift, and go to state 12
    TOKEN_DOUBLE   shift, and go to state 13

    type                   go to state 21
    parameter_declaration  go to state 27


State 26

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN • '{' statements '}'

    '{'  shift, and go to state 28


State 27

   61 parameters_list: parameters_list TOKEN_VIRGULA parameter_declaration •

    $default  reduce using rule 61 (parameters_list)


State 28

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' • statements '}'

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    statements  go to state 41
    statement   go to state 42


State 29

   34 if_stat: TOKEN_IF • '(' exp ')' tail else_if_part else_part

    '('  shift, and go to state 43


State 30

   32 for_stat: TOKEN_FOR • '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' tail

    '('  shift, and go to state 44


State 31

   33 while_stat: TOKEN_WHILE • '(' exp ')' tail

    '('  shift, and go to state 45


State 32

   51 statement: TOKEN_RETURN • TOKEN_PONTOEVIRGULA

    TOKEN_PONTOEVIRGULA  shift, and go to state 46


State 33

   50 statement: TOKEN_BREAK • TOKEN_PONTOEVIRGULA

    TOKEN_PONTOEVIRGULA  shift, and go to state 47


State 34

   49 statement: TOKEN_CONTINUE • TOKEN_PONTOEVIRGULA

    TOKEN_PONTOEVIRGULA  shift, and go to state 48


State 35

   30 variable: TOKEN_IDENTIFICADOR •

    $default  reduce using rule 30 (variable)


State 36

   31 assignment: variable • TOKEN_ASSIGN exp TOKEN_PONTOEVIRGULA

    TOKEN_ASSIGN  shift, and go to state 49


State 37

   48 statement: assignment •

    $default  reduce using rule 48 (statement)


State 38

   46 statement: for_stat •

    $default  reduce using rule 46 (statement)


State 39

   47 statement: while_stat •

    $default  reduce using rule 47 (statement)


State 40

   45 statement: if_stat •

    $default  reduce using rule 45 (statement)


State 41

   43 statements: statements • statement
   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' statements • '}'

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '}'                  shift, and go to state 50

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    statement   go to state 51


State 42

   44 statements: statement •

    $default  reduce using rule 44 (statements)


State 43

   34 if_stat: TOKEN_IF '(' • exp ')' tail else_if_part else_part

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 56
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 44

   32 for_stat: TOKEN_FOR '(' • exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 62
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 45

   33 while_stat: TOKEN_WHILE '(' • exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 63
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 46

   51 statement: TOKEN_RETURN TOKEN_PONTOEVIRGULA •

    $default  reduce using rule 51 (statement)


State 47

   50 statement: TOKEN_BREAK TOKEN_PONTOEVIRGULA •

    $default  reduce using rule 50 (statement)


State 48

   49 statement: TOKEN_CONTINUE TOKEN_PONTOEVIRGULA •

    $default  reduce using rule 49 (statement)


State 49

   31 assignment: variable TOKEN_ASSIGN • exp TOKEN_PONTOEVIRGULA

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 64
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 50

   59 method_declaration: type TOKEN_IDENTIFICADOR TOKEN_LPAREN parameters_list TOKEN_RPAREN '{' statements '}' •

    $default  reduce using rule 59 (method_declaration)


State 51

   43 statements: statements statement •

    $default  reduce using rule 43 (statements)


State 52

   13 unary_operator: TOKEN_INCREMENT •
   16 expression_increment: TOKEN_INCREMENT • exp

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    TOKEN_IDENTIFICADOR  [reduce using rule 13 (unary_operator)]
    TOKEN_INCREMENT      [reduce using rule 13 (unary_operator)]
    TOKEN_DECREMENT      [reduce using rule 13 (unary_operator)]
    '('                  [reduce using rule 13 (unary_operator)]
    '!'                  [reduce using rule 13 (unary_operator)]

    exp                   go to state 65
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 53

   14 unary_operator: TOKEN_DECREMENT •
   17 expression_decrement: TOKEN_DECREMENT • exp

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    TOKEN_IDENTIFICADOR  [reduce using rule 14 (unary_operator)]
    TOKEN_INCREMENT      [reduce using rule 14 (unary_operator)]
    TOKEN_DECREMENT      [reduce using rule 14 (unary_operator)]
    '('                  [reduce using rule 14 (unary_operator)]
    '!'                  [reduce using rule 14 (unary_operator)]

    exp                   go to state 66
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 54

    9 exp: '(' • exp ')'

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 67
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 55

   15 unary_operator: '!' •

    $default  reduce using rule 15 (unary_operator)


State 56

    8 exp: exp • binary_operator exp
   34 if_stat: TOKEN_IF '(' exp • ')' tail else_if_part else_part

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 80

    binary_operator  go to state 81


State 57

    6 exp: term •

    $default  reduce using rule 6 (exp)


State 58

    7 exp: unary_operator • exp

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 82
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 59

   11 term: expression_increment •

    $default  reduce using rule 11 (term)


State 60

   12 term: expression_decrement •

    $default  reduce using rule 12 (term)


State 61

   10 exp: variable •

    $default  reduce using rule 10 (exp)


State 62

    8 exp: exp • binary_operator exp
   32 for_stat: TOKEN_FOR '(' exp • TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' tail

    TOKEN_SUM            shift, and go to state 68
    TOKEN_SUB            shift, and go to state 69
    TOKEN_MULT           shift, and go to state 70
    TOKEN_DIV            shift, and go to state 71
    TOKEN_EQUAL          shift, and go to state 72
    TOKEN_GT             shift, and go to state 73
    TOKEN_LT             shift, and go to state 74
    TOKEN_GE             shift, and go to state 75
    TOKEN_LE             shift, and go to state 76
    TOKEN_NE             shift, and go to state 77
    TOKEN_OR             shift, and go to state 78
    TOKEN_AND            shift, and go to state 79
    TOKEN_PONTOEVIRGULA  shift, and go to state 83

    binary_operator  go to state 81


State 63

    8 exp: exp • binary_operator exp
   33 while_stat: TOKEN_WHILE '(' exp • ')' tail

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 84

    binary_operator  go to state 81


State 64

    8 exp: exp • binary_operator exp
   31 assignment: variable TOKEN_ASSIGN exp • TOKEN_PONTOEVIRGULA

    TOKEN_SUM            shift, and go to state 68
    TOKEN_SUB            shift, and go to state 69
    TOKEN_MULT           shift, and go to state 70
    TOKEN_DIV            shift, and go to state 71
    TOKEN_EQUAL          shift, and go to state 72
    TOKEN_GT             shift, and go to state 73
    TOKEN_LT             shift, and go to state 74
    TOKEN_GE             shift, and go to state 75
    TOKEN_LE             shift, and go to state 76
    TOKEN_NE             shift, and go to state 77
    TOKEN_OR             shift, and go to state 78
    TOKEN_AND            shift, and go to state 79
    TOKEN_PONTOEVIRGULA  shift, and go to state 85

    binary_operator  go to state 81


State 65

    8 exp: exp • binary_operator exp
   16 expression_increment: TOKEN_INCREMENT exp •

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79

    TOKEN_SUM    [reduce using rule 16 (expression_increment)]
    TOKEN_SUB    [reduce using rule 16 (expression_increment)]
    TOKEN_MULT   [reduce using rule 16 (expression_increment)]
    TOKEN_DIV    [reduce using rule 16 (expression_increment)]
    TOKEN_EQUAL  [reduce using rule 16 (expression_increment)]
    TOKEN_GT     [reduce using rule 16 (expression_increment)]
    TOKEN_LT     [reduce using rule 16 (expression_increment)]
    TOKEN_GE     [reduce using rule 16 (expression_increment)]
    TOKEN_LE     [reduce using rule 16 (expression_increment)]
    TOKEN_NE     [reduce using rule 16 (expression_increment)]
    TOKEN_OR     [reduce using rule 16 (expression_increment)]
    TOKEN_AND    [reduce using rule 16 (expression_increment)]
    $default     reduce using rule 16 (expression_increment)

    binary_operator  go to state 81


State 66

    8 exp: exp • binary_operator exp
   17 expression_decrement: TOKEN_DECREMENT exp •

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79

    TOKEN_SUM    [reduce using rule 17 (expression_decrement)]
    TOKEN_SUB    [reduce using rule 17 (expression_decrement)]
    TOKEN_MULT   [reduce using rule 17 (expression_decrement)]
    TOKEN_DIV    [reduce using rule 17 (expression_decrement)]
    TOKEN_EQUAL  [reduce using rule 17 (expression_decrement)]
    TOKEN_GT     [reduce using rule 17 (expression_decrement)]
    TOKEN_LT     [reduce using rule 17 (expression_decrement)]
    TOKEN_GE     [reduce using rule 17 (expression_decrement)]
    TOKEN_LE     [reduce using rule 17 (expression_decrement)]
    TOKEN_NE     [reduce using rule 17 (expression_decrement)]
    TOKEN_OR     [reduce using rule 17 (expression_decrement)]
    TOKEN_AND    [reduce using rule 17 (expression_decrement)]
    $default     reduce using rule 17 (expression_decrement)

    binary_operator  go to state 81


State 67

    8 exp: exp • binary_operator exp
    9    | '(' exp • ')'

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 86

    binary_operator  go to state 81


State 68

   18 binary_operator: TOKEN_SUM •

    $default  reduce using rule 18 (binary_operator)


State 69

   19 binary_operator: TOKEN_SUB •

    $default  reduce using rule 19 (binary_operator)


State 70

   20 binary_operator: TOKEN_MULT •

    $default  reduce using rule 20 (binary_operator)


State 71

   21 binary_operator: TOKEN_DIV •

    $default  reduce using rule 21 (binary_operator)


State 72

   24 binary_operator: TOKEN_EQUAL •

    $default  reduce using rule 24 (binary_operator)


State 73

   26 binary_operator: TOKEN_GT •

    $default  reduce using rule 26 (binary_operator)


State 74

   27 binary_operator: TOKEN_LT •

    $default  reduce using rule 27 (binary_operator)


State 75

   28 binary_operator: TOKEN_GE •

    $default  reduce using rule 28 (binary_operator)


State 76

   29 binary_operator: TOKEN_LE •

    $default  reduce using rule 29 (binary_operator)


State 77

   25 binary_operator: TOKEN_NE •

    $default  reduce using rule 25 (binary_operator)


State 78

   22 binary_operator: TOKEN_OR •

    $default  reduce using rule 22 (binary_operator)


State 79

   23 binary_operator: TOKEN_AND •

    $default  reduce using rule 23 (binary_operator)


State 80

   34 if_stat: TOKEN_IF '(' exp ')' • tail else_if_part else_part

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 88
    statement   go to state 89


State 81

    8 exp: exp binary_operator • exp

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 90
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 82

    7 exp: unary_operator exp •
    8    | exp • binary_operator exp

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79

    TOKEN_SUM    [reduce using rule 7 (exp)]
    TOKEN_SUB    [reduce using rule 7 (exp)]
    TOKEN_MULT   [reduce using rule 7 (exp)]
    TOKEN_DIV    [reduce using rule 7 (exp)]
    TOKEN_EQUAL  [reduce using rule 7 (exp)]
    TOKEN_GT     [reduce using rule 7 (exp)]
    TOKEN_LT     [reduce using rule 7 (exp)]
    TOKEN_GE     [reduce using rule 7 (exp)]
    TOKEN_LE     [reduce using rule 7 (exp)]
    TOKEN_NE     [reduce using rule 7 (exp)]
    TOKEN_OR     [reduce using rule 7 (exp)]
    TOKEN_AND    [reduce using rule 7 (exp)]
    $default     reduce using rule 7 (exp)

    binary_operator  go to state 81


State 83

   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA • exp TOKEN_PONTOEVIRGULA exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 91
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 84

   33 while_stat: TOKEN_WHILE '(' exp ')' • tail

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 92
    statement   go to state 89


State 85

   31 assignment: variable TOKEN_ASSIGN exp TOKEN_PONTOEVIRGULA •

    $default  reduce using rule 31 (assignment)


State 86

    9 exp: '(' exp ')' •

    $default  reduce using rule 9 (exp)


State 87

   42 tail: '{' • statements '}'

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    statements  go to state 93
    statement   go to state 42


State 88

   34 if_stat: TOKEN_IF '(' exp ')' tail • else_if_part else_part

    TOKEN_IF    shift, and go to state 94
    TOKEN_ELSE  shift, and go to state 95

    TOKEN_IF    [reduce using rule 38 (else_if_part)]
    TOKEN_ELSE  [reduce using rule 38 (else_if_part)]
    $default    reduce using rule 38 (else_if_part)

    else_if_part  go to state 96


State 89

   41 tail: statement •

    $default  reduce using rule 41 (tail)


State 90

    8 exp: exp • binary_operator exp
    8    | exp binary_operator exp •

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79

    TOKEN_SUM    [reduce using rule 8 (exp)]
    TOKEN_SUB    [reduce using rule 8 (exp)]
    TOKEN_MULT   [reduce using rule 8 (exp)]
    TOKEN_DIV    [reduce using rule 8 (exp)]
    TOKEN_EQUAL  [reduce using rule 8 (exp)]
    TOKEN_GT     [reduce using rule 8 (exp)]
    TOKEN_LT     [reduce using rule 8 (exp)]
    TOKEN_GE     [reduce using rule 8 (exp)]
    TOKEN_LE     [reduce using rule 8 (exp)]
    TOKEN_NE     [reduce using rule 8 (exp)]
    TOKEN_OR     [reduce using rule 8 (exp)]
    TOKEN_AND    [reduce using rule 8 (exp)]
    $default     reduce using rule 8 (exp)

    binary_operator  go to state 81


State 91

    8 exp: exp • binary_operator exp
   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp • TOKEN_PONTOEVIRGULA exp ')' tail

    TOKEN_SUM            shift, and go to state 68
    TOKEN_SUB            shift, and go to state 69
    TOKEN_MULT           shift, and go to state 70
    TOKEN_DIV            shift, and go to state 71
    TOKEN_EQUAL          shift, and go to state 72
    TOKEN_GT             shift, and go to state 73
    TOKEN_LT             shift, and go to state 74
    TOKEN_GE             shift, and go to state 75
    TOKEN_LE             shift, and go to state 76
    TOKEN_NE             shift, and go to state 77
    TOKEN_OR             shift, and go to state 78
    TOKEN_AND            shift, and go to state 79
    TOKEN_PONTOEVIRGULA  shift, and go to state 97

    binary_operator  go to state 81


State 92

   33 while_stat: TOKEN_WHILE '(' exp ')' tail •

    $default  reduce using rule 33 (while_stat)


State 93

   42 tail: '{' statements • '}'
   43 statements: statements • statement

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '}'                  shift, and go to state 98

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    statement   go to state 51


State 94

   37 else_if_part: TOKEN_IF • '(' exp ')' tail

    '('  shift, and go to state 99


State 95

   36 else_if_part: TOKEN_ELSE •

    $default  reduce using rule 36 (else_if_part)


State 96

   34 if_stat: TOKEN_IF '(' exp ')' tail else_if_part • else_part
   35 else_if_part: else_if_part • TOKEN_ELSE TOKEN_IF '(' exp ')' tail

    TOKEN_ELSE  shift, and go to state 100

    TOKEN_ELSE  [reduce using rule 40 (else_part)]
    $default    reduce using rule 40 (else_part)

    else_part  go to state 101


State 97

   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA • exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 102
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 98

   42 tail: '{' statements '}' •

    $default  reduce using rule 42 (tail)


State 99

   37 else_if_part: TOKEN_IF '(' • exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 103
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 100

   35 else_if_part: else_if_part TOKEN_ELSE • TOKEN_IF '(' exp ')' tail
   39 else_part: TOKEN_ELSE • tail

    TOKEN_IF             shift, and go to state 104
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 105
    statement   go to state 89


State 101

   34 if_stat: TOKEN_IF '(' exp ')' tail else_if_part else_part •

    $default  reduce using rule 34 (if_stat)


State 102

    8 exp: exp • binary_operator exp
   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp • ')' tail

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 106

    binary_operator  go to state 81


State 103

    8 exp: exp • binary_operator exp
   37 else_if_part: TOKEN_IF '(' exp • ')' tail

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 107

    binary_operator  go to state 81


State 104

   34 if_stat: TOKEN_IF • '(' exp ')' tail else_if_part else_part
   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF • '(' exp ')' tail

    '('  shift, and go to state 108


State 105

   39 else_part: TOKEN_ELSE tail •

    $default  reduce using rule 39 (else_part)


State 106

   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' • tail

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 109
    statement   go to state 89


State 107

   37 else_if_part: TOKEN_IF '(' exp ')' • tail

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 110
    statement   go to state 89


State 108

   34 if_stat: TOKEN_IF '(' • exp ')' tail else_if_part else_part
   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF '(' • exp ')' tail

    TOKEN_IDENTIFICADOR  shift, and go to state 35
    TOKEN_INCREMENT      shift, and go to state 52
    TOKEN_DECREMENT      shift, and go to state 53
    '('                  shift, and go to state 54
    '!'                  shift, and go to state 55

    exp                   go to state 111
    term                  go to state 57
    unary_operator        go to state 58
    expression_increment  go to state 59
    expression_decrement  go to state 60
    variable              go to state 61


State 109

   32 for_stat: TOKEN_FOR '(' exp TOKEN_PONTOEVIRGULA exp TOKEN_PONTOEVIRGULA exp ')' tail •

    $default  reduce using rule 32 (for_stat)


State 110

   37 else_if_part: TOKEN_IF '(' exp ')' tail •

    $default  reduce using rule 37 (else_if_part)


State 111

    8 exp: exp • binary_operator exp
   34 if_stat: TOKEN_IF '(' exp • ')' tail else_if_part else_part
   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF '(' exp • ')' tail

    TOKEN_SUM    shift, and go to state 68
    TOKEN_SUB    shift, and go to state 69
    TOKEN_MULT   shift, and go to state 70
    TOKEN_DIV    shift, and go to state 71
    TOKEN_EQUAL  shift, and go to state 72
    TOKEN_GT     shift, and go to state 73
    TOKEN_LT     shift, and go to state 74
    TOKEN_GE     shift, and go to state 75
    TOKEN_LE     shift, and go to state 76
    TOKEN_NE     shift, and go to state 77
    TOKEN_OR     shift, and go to state 78
    TOKEN_AND    shift, and go to state 79
    ')'          shift, and go to state 112

    binary_operator  go to state 81


State 112

   34 if_stat: TOKEN_IF '(' exp ')' • tail else_if_part else_part
   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF '(' exp ')' • tail

    TOKEN_IF             shift, and go to state 29
    TOKEN_FOR            shift, and go to state 30
    TOKEN_WHILE          shift, and go to state 31
    TOKEN_RETURN         shift, and go to state 32
    TOKEN_BREAK          shift, and go to state 33
    TOKEN_CONTINUE       shift, and go to state 34
    TOKEN_IDENTIFICADOR  shift, and go to state 35
    '{'                  shift, and go to state 87

    variable    go to state 36
    assignment  go to state 37
    for_stat    go to state 38
    while_stat  go to state 39
    if_stat     go to state 40
    tail        go to state 113
    statement   go to state 89


State 113

   34 if_stat: TOKEN_IF '(' exp ')' tail • else_if_part else_part
   35 else_if_part: else_if_part TOKEN_ELSE TOKEN_IF '(' exp ')' tail •

    TOKEN_IF    shift, and go to state 94
    TOKEN_ELSE  shift, and go to state 95

    TOKEN_IF             [reduce using rule 35 (else_if_part)]
    TOKEN_IF             [reduce using rule 38 (else_if_part)]
    TOKEN_ELSE           [reduce using rule 35 (else_if_part)]
    TOKEN_ELSE           [reduce using rule 38 (else_if_part)]
    TOKEN_FOR            reduce using rule 35 (else_if_part)
    TOKEN_FOR            [reduce using rule 38 (else_if_part)]
    TOKEN_WHILE          reduce using rule 35 (else_if_part)
    TOKEN_WHILE          [reduce using rule 38 (else_if_part)]
    TOKEN_RETURN         reduce using rule 35 (else_if_part)
    TOKEN_RETURN         [reduce using rule 38 (else_if_part)]
    TOKEN_BREAK          reduce using rule 35 (else_if_part)
    TOKEN_BREAK          [reduce using rule 38 (else_if_part)]
    TOKEN_CONTINUE       reduce using rule 35 (else_if_part)
    TOKEN_CONTINUE       [reduce using rule 38 (else_if_part)]
    TOKEN_IDENTIFICADOR  reduce using rule 35 (else_if_part)
    TOKEN_IDENTIFICADOR  [reduce using rule 38 (else_if_part)]
    '}'                  reduce using rule 35 (else_if_part)
    '}'                  [reduce using rule 38 (else_if_part)]
    $default             reduce using rule 35 (else_if_part)

    else_if_part  go to state 96
